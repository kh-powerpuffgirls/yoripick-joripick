import React, { useState } from 'react';
import styles from './CommunityRecipeDetail_Detail.module.css';
import classNames from 'classnames/bind';

// [ÏàòÏ†ï] Vite ÌôòÍ≤ΩÏóê ÎßûÎäî ÏÉÅÎåÄ Í≤ΩÎ°úÎ°ú Ïù¥ÎØ∏ÏßÄ import Í≤ΩÎ°úÎ•º ÏàòÏ†ïÌï©ÎãàÎã§.
import listIcon from '../../../assets/sample/list.png';
import galleryIcon from '../../../assets/sample/gallery.png';
import recipeImage from '../../../assets/sample/recipe.png';

const cx = classNames.bind(styles);

const lodingImg = {
  toggleList: listIcon,
  toggleGall: galleryIcon
};

interface RecipeStep {
  order: number;
  description: string;
  imageSrc: string;
}

const CommunityRecipeDetail_Detail: React.FC = () => {
  const mockSteps: RecipeStep[] = [
    {
      order: 1,
      description: 'ÌåΩÏù¥Î≤ÑÏÑØÏùÄ ÏïÑÎûòÏ™Ω ÎøåÎ¶¨ Î∂ÄÎ∂Ñ(Í∑†ÏÇ¨Ï≤¥)ÏùÑ ÏûòÎùºÎÇ¥ Ï£ºÍ≥†, Î™®ÏñëÏùÑ ÏÇ¥Î†§Í≥† 2~3Ï§Ñ Ïî© Îì¨ÏÑ± Îì¨ÏÑ± Ï∞¢Ïñ¥Ï£ºÏÑ∏Ïöî. Ï™ΩÌååÏôÄ Ï≤≠ÏñëÍ≥†Ï∂îÎäî ÏÜ°ÏÜ° Ïç∞Ïñ¥ Ï£ºÏÑ∏Ïöî.',
      imageSrc: recipeImage, // [ÏàòÏ†ï] importÌïú Ïù¥ÎØ∏ÏßÄ Î≥ÄÏàòÎ•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.
    },
    {
      order: 2,
      description: 'Î≥ºÏóê Í≥†Ï∂îÏû•, Ïó∞ÎëêÏàú, Ï∞∏Í∏∞Î¶Ñ, ÏÑ§ÌÉïÏùÑ ÎÑ£Í≥† ÏûòÏÑûÏñ¥ÏÑú ÏñëÎÖêÏû•ÏùÑ ÎßåÎì§Ïñ¥Ï£ºÏÑ∏Ïöî.',
      imageSrc: recipeImage,
    },
    {
      order: 3,
      description: 'Ï§ëÎ∂àÏùò Ìå¨Ïóê Í∏∞Î¶ÑÏùÑ ÎëêÎ•¥Í≥†, ÌåΩÏù¥Î≤ÑÏÑØÏùÑ Ïò¨Î†§ÏÑú Ïà®Ïù¥ Ï£ΩÏñ¥ Î∂ÄÎìúÎü¨ÏõåÏßàÎïåÍπåÏßÄ ÏïûÎí§Î°ú Íµ¨ÏõåÏ£ºÏÑ∏Ïöî.(ÏïΩ 2~3Î∂Ñ)',
      imageSrc: recipeImage,
    },
    {
      order: 4,
      description: 'ÌåΩÏù¥Î≤ÑÏÑØ ÏúÑÏóê ÏñëÎÖêÏû•ÏùÑ Í≥†Î£® Î∞úÎùºÏ£ºÍ≥†, ÏïΩÎ∂àÎ°ú Ï§ÑÏó¨ Ïç¨ Í≥†Ï∂îÏôÄ Ï™æÌååÎ•º ÏñπÏñ¥ 3~5Î∂Ñ ÎèôÏïà Îçî Ï°∏Ïó¨Ï£ºÏÑ∏Ïöî. Î≤ÑÏÑØÏóêÏÑú Î¨ºÏù¥ ÎÇòÏò§Î©¥ÏÑú ÏñëÎÖêÏù¥ Ïûò Ïä§Î©∞Îì§Î©¥ ÏôÑÏÑ±!',
      imageSrc: recipeImage,
    },
  ];

  const [isListView, setIsListView] = useState(true);
  const [currentStepIndex, setCurrentStepIndex] = useState(0);

  const handleToggleView = () => {
    setIsListView(!isListView);
  };
  
  const changeSlide = (direction: number) => {
    const newIndex = currentStepIndex + direction;
    if (newIndex >= 0 && newIndex < mockSteps.length) {
      setCurrentStepIndex(newIndex);
    }
  };

  const currentStep = mockSteps[currentStepIndex];
  const indicatorWidth = ((currentStepIndex + 1) / mockSteps.length) * 100;

  return (
    <div className={styles.container}>
      {isListView ? (
        // "Î™©Î°ùÏúºÎ°ú Î≥¥Í∏∞" Î∑∞
        <div className={styles.list_method}>
          <div className={styles.info}>
            <div>Ï°∞Î¶¨ÏàúÏÑúüç≥</div>
            <div className={cx("toggle-area", { toggled: !isListView })} onClick={handleToggleView}>
              <div className={styles.slide} />
              <img src={lodingImg.toggleList} className={cx("toggle-icon", "listIcon")} alt="Î™©Î°ù Î≥¥Í∏∞" />
              <img src={lodingImg.toggleGall} className={cx("toggle-icon", "galleryIcon")} alt="ÌïòÎÇòÏî© Î≥¥Í∏∞" />
            </div> 
          </div>
          <hr />
          {mockSteps.map((step) => (
            <React.Fragment key={step.order}>
              <div className={styles.list}>
                <span style={{ color: step.order % 2 !== 0 ? '#3E5822' : '#FE8051', fontWeight: 'bold' }}>
                  {step.order}.
                </span>
                <span>{step.description}</span>
                <img src={step.imageSrc} alt={`Step ${step.order}`} className={styles.list_img} />
              </div>
              <hr />
            </React.Fragment>
          ))}
        </div>
      ) : (
        // "ÌïòÎÇòÏî© Î≥¥Í∏∞" Î∑∞
        <div className={styles.one_method}>
          <div className={styles.info}>
            <div>Ï°∞Î¶¨ÏàúÏÑúüç≥</div>
            <div className={cx("toggle-area", { toggled: !isListView })} onClick={handleToggleView}>
              <div className={styles.slide} />
              <img src={lodingImg.toggleList} className={cx("toggle-icon", "listIcon")} alt="Î™©Î°ù Î≥¥Í∏∞" />
              <img src={lodingImg.toggleGall} className={cx("toggle-icon", "galleryIcon")} alt="ÌïòÎÇòÏî© Î≥¥Í∏∞" />
            </div> 
          </div>
          <hr />
          <div className={styles.one_img}>
            <div className={styles.indicator}>
              <div className={styles.indicator_bar} style={{ width: `${indicatorWidth}%` }}></div>
            </div>
            <button className={`${styles.nav} ${styles.left}`} onClick={() => changeSlide(-1)} disabled={currentStepIndex === 0}>‚óÄ</button>
            <div className={styles.one_slide}>
              <img src={currentStep.imageSrc} alt={`Step ${currentStep.order}`} height="510" width="510" />
            </div>
            <button className={`${styles.nav} ${styles.right}`} onClick={() => changeSlide(1)} disabled={currentStepIndex === mockSteps.length - 1}>‚ñ∂</button>
          </div>
          <br />
          <hr />
          <div className={styles.one_info}>
            <span style={{ fontSize: '28px', fontWeight: 500 }}>Step {currentStep.order}.</span>
            <br />
            <span style={{ fontSize: '18px' }}>{currentStep.description}</span>
          </div>
        </div>
      )}
    </div>
  );
};

export default CommunityRecipeDetail_Detail;

